name: Terraform CI/CD

on:
  push:
    branches:
      - terraform-dev
      - terraform-prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [my-portfolio]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }} # Use PAT from GitHub Secrets

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: "portfolioproject-7841"

      - name: Authenticate Docker with GCP Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Set Branch Tag
        id: branch_tag
        run: |
          # Extract and sanitize the branch name (only alphanumeric and dashes)
          BRANCH_NAME="${GITHUB_REF##*/}"
          SANITIZED_BRANCH_NAME=$(echo "$BRANCH_NAME" | tr -cd '[:alnum:]-')
          echo "branch_tag=$SANITIZED_BRANCH_NAME" >> $GITHUB_ENV

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./my-portfolio
          push: false
          load: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/portfolio:latest
            ghcr.io/${{ github.repository_owner }}/portfolio:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/portfolio:${{ env.branch_tag }}
            us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_TERRAFORM_REPO }}/portfolio:latest
            us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_TERRAFORM_REPO }}/portfolio:${{ github.sha }}
            us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_TERRAFORM_REPO }}/portfolio:${{ env.branch_tag }}
          cache-from: type=gha,mode=max
          cache-to: type=gha,mode=max

      - name: Push to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/portfolio:latest
          docker push ghcr.io/${{ github.repository_owner }}/portfolio:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/portfolio:${{ env.branch_tag }}

      - name: Push to GAR
        run: |
          docker push us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_TERRAFORM_REPO }}/portfolio:latest
          docker push us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_TERRAFORM_REPO }}/portfolio:${{ github.sha }}
          docker push us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REGISTRY_TERRAFORM_REPO }}/portfolio:${{ env.branch_tag }}    

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID }}
      TF_VAR_cloud_run_name: ${{ vars.GCP_CLOUD_RUN_NAME }}
      TF_VAR_private_ip: ${{ secrets.PRIVATE_IP }}
      TF_VAR_region: ${{ vars.GCP_REGION }}
      TF_VAR_zone: ${{ vars.GCP_ZONE }}
      TF_VAR_vm_name: ${{ vars.GCP_VM_NAME }}
      TF_VAR_vpc_network_name: ${{ vars.GCP_VPC_NETWORK_NAME }}
      TF_VAR_subnetwork_name: ${{ vars.GCP_SUBNETWORK_NAME }}
      TF_VAR_grafana_service_account_name: ${{ vars.GCP_GRAFANA_SA_NAME }}
      TF_VAR_gcp_artifact_registry_url: ${{ vars.GCP_ARTIFACT_REGISTRY_URL }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Google Cloud Authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.4

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: my-portfolio/terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -lock=false
        working-directory: my-portfolio/terraform

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
    
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/terraform-prod'

    env:
      TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID }}
      TF_VAR_cloud_run_name: ${{ vars.GCP_CLOUD_RUN_NAME }}
      TF_VAR_private_ip: ${{ secrets.PRIVATE_IP }}
      TF_VAR_region: ${{ vars.GCP_REGION }}
      TF_VAR_zone: ${{ vars.GCP_ZONE }}
      TF_VAR_vm_size: ${{ vars.GCP_VM_NAME }}
      TF_VAR_vpc_network_name: ${{ vars.GCP_VPC_NETWORK_NAME }}
      TF_VAR_subnetwork_name: ${{ vars.GCP_SUBNETWORK_NAME }}
      TF_VAR_grafana_service_account_name: ${{ vars.GCP_GRAFANA_SA_NAME }}
      TF_VAR_gcp_artifact_registry_url: ${{ vars.GCP_ARTIFACT_REGISTRY_URL }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Google Cloud Authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.4

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: my-portfolio/terraform

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve tfplan
        working-directory: my-portfolio/terraform